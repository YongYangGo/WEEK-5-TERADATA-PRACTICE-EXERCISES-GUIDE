
1 How many distinct dates are there in the saledate column of the transaction
table for each month/year combination in the database?
1,	SELECT EXTRACT(MONTH FROM saledate) as month_num,

		   EXTRACT(YEAR FROM saledate) as year_num,
		   
		   COUNT(DISTINCT saledate) as nb_distinct_dates

	FROM trnsact 

	GROUP BY month_num, year_num

	ORDER BY year_num ASC, month_num ASC

2, Exercise 2. Use a CASE statement within an aggregate function to determine which sku
had the greatest total sales during the combined summer months of June, July, and August.

with cte as (
SELECT EXTRACT(MONTH FROM saledate) as month_num ,sum(amt) as total_sale,SKU
from trnsact
where stype='p'
group by SKU,month_num
having month_num =6 or month_num =7 or month_num =8)

select sum(total_sale) as total,SKU
from cte
where sku=2783996
group by SKU
order by total desc

select 
case
when extract(month from saledate)=6 then 1
when extract(month from saledate)=7 then 1
when extract(month from saledate)=8 then 1 
end as month_group
,sum(amt) as total,sku
from trnsact
where stype='p'
group by month_group,sku
having month_group is not null
order by total desc

3, Exercise 3. How many distinct dates are there in the saledate column of the transaction
table for each month/year/store combination in the database? Sort your results by the
number of days per combination in ascending order.

select count(distinct saledate) as num_date,store,
extract(month from saledate) as month_num,
extract(year from saledate) as year_num
from trnsact
group by year_num,month_num,store
order by num_date asc


select sum(amt)/count(distinct saledate) as average_rev,store,
extract(month from saledate) as month_num,
extract(year from saledate) as year_num
from trnsact
where store=204 and stype='p'
group by year_num,month_num,store
order by average_rev asc

4 Exercise 4. What is the average daily revenue for each store/month/year combination in
the database? Calculate this by dividing the total revenue for a group by the number of
sales days available in the transaction table for that group.

SELECT 
  store, 
  EXTRACT (month FROM saledate) AS month_num,
  EXTRACT (year FROM saledate) AS year_num,
  COUNT (DISTINCT saledate) AS num_dates,
  SUM(amt) AS total_revenue,
  total_revenue/num_dates AS daily_revenue,
  (CASE 
  WHEN (year_num=2005 AND month_num=8) THEN 'cannot' ELSE 'can' 
  END) As can_use_not
  FROM trnsact
  WHERE stype='p' and can_use_not='can'
  GROUP BY store, month_num, year_num,can_use_not
  Having num_dates>19
  Order by store asc,year_num asc,month_num asc


5 Exercise 5. What is the average daily revenue brought in by Dillard’s stores in areas of
high, medium, or low levels of high school education?


select avg(b.total_revenue/b.num_dates)as avg_sale,
case 
when (a.msa_high >50 and a.msa_high <60) then 'low'
when (a.msa_high >=60.01 and a.msa_high <=70) then 'medium'
when a.msa_high >70. then 'high' end as education
from store_msa a
join 
(SELECT 
  store, 
  EXTRACT (month FROM saledate) AS month_num,
  EXTRACT (year FROM saledate) AS year_num,
  COUNT (DISTINCT saledate) AS num_dates,
  SUM(amt) AS total_revenue,
  total_revenue/num_dates AS daily_revenue,
  (CASE 
  WHEN (year_num=2005 AND month_num=8) THEN 'cannot' ELSE 'can' 
  END) As can_use_not
  FROM trnsact
  WHERE stype='p' and can_use_not='can'
  GROUP BY store, month_num, year_num,can_use_not
  Having num_dates>19 )  b
on a.store=b.store
group by education

6, Exercise 6. Compare the average daily revenues of the stores with the highest median
msa_income and the lowest median msa_income. In what city and state were these stores,
and which store had a higher average daily revenue?

select msa_income,city,store,state,
avg(total_rev/num_dates) as avg_daily_revenue
from 
(SELECT 
  a.store,a.msa_income,a.city,a.state,
  EXTRACT (month FROM t.saledate) AS month_num,
  EXTRACT (year FROM t.saledate) AS year_num, 
  COUNT (DISTINCT saledate) AS num_dates, 
  Sum(t.amt) as total_rev,

  (CASE 
  WHEN (year_num=2005 AND month_num=8) THEN 'cannot' ELSE 'can' 
  END) As can_use_not
  FROM trnsact t
  inner Join store_msa a
  on a.store=t.store
  WHERE t.stype='p' and can_use_not='can'
  GROUP BY a.store,a.state,a.msa_income,a.city,month_num,year_num,can_use_not
  Having num_dates>19 ) as clearned_table
  where msa_income in((SELECT max(msa_income) FROM store_msa),(select min(msa_income) from store_msa))
  group by city,store,msa_income,state

7, Exercise 7: What is the brand of the sku with the greatest standard deviation in sprice?
Only examine skus that have been part of over 100 transactions.
select t.sku,s.brand, STDDEV_SAMP(t.sprice),max(t.sprice),min(t.sprice)
from trnsact t
inner join skuinfo s
on t.sku=s.sku
where t.stype='p' 

group by  t.sku,s.brand
having count(saledate)>100
order by STDDEV_SAMP(t.sprice) desc

8, Exercise 8: Examine all the transactions for the sku with the greatest standard deviation in
sprice, but only consider skus that are part of more than 100 transactions


select sku, max(stdv) 

from(select distinct sku, stddev_samp(sprice) as stdv 

from trnsact 

group by sku 

having count(trannum)>100) as trn_stdv 

group by sku 

order by max(stdv) desc

9, Exercise 9: What was the average daily revenue Dillard’s brought in during each month of
the year?

SELECT 
  store, substr(cast(SALEDATE as char(8)),1,7) as year_month,
  COUNT (DISTINCT saledate) AS num_dates,
  SUM(amt) AS total_revenue,
  total_revenue/num_dates AS daily_revenue
  FROM trnsact
  WHERE stype='p' and year_month<>'2005-08'
  GROUP BY store, year_month
  Having num_dates>19
 Order by year_month desc

10，Exercise 10: Which department, in which city and state of what store, had the greatest %
increase in average daily sales revenue from November to December?

with cte as (
select st.store,st.city,st.state,d.dept
,substr(cast(t.SALEDATE as char(8)),1,7) as year_month,
COUNT (DISTINCT t.saledate) AS num_dates,
SUM(t.amt) AS total_revenue,
total_revenue/num_dates AS daily_revenue,
lag(daily_revenue)over
(partition by st.store,d.dept order by year_month) as previous_month,
(daily_revenue-previous_month)/previous_month*100 as percentage_change
from trnsact t
inner join skuinfo s
on t.sku=s.sku

inner join store_msa st
on st.store=t.store

inner join deptinfo d
on d.dept=s.dept
where t.stype='p' and (year_month='2004-11'or year_month='2004-12')
group by st.store,st.city,st.state,d.dept,year_month
having num_dates>=20
)
select store,dept,city,state,percentage_change from cte
where year_month like '%12'
order by percentage_change desc





````````
select 
store,city,state,dept,
sum(case
when year_month='2004-11' then amt end) as revenue_11,
sum(case
when year_month='2004-12' then amt end) as revenue_12,

count(DISTINCT case
when year_month='2004-11' then saledate end) as date_11,

count(DISTINCT case
when year_month='2004-12' then saledate end) as date_12,

((revenue_12/date_12)-(revenue_11/date_11))/(revenue_11/date_11)*100 as change

from
(select st.store,st.city,st.state,d.dept,substr(cast(t.SALEDATE as char(8)),1,7) as year_month,t.amt,t.saledate
from trnsact t
inner join skuinfo s
on t.sku=s.sku

inner join store_msa st
on st.store=t.store

inner join deptinfo d
on d.dept=s.dept

where t.stype='p' and (year_month='2004-11'or year_month='2004-12')


) as joined_table
having date_11>=20 and date_12>=20
group by store,city,state,dept
order by change desc

11, Exercise 11: What is the city and state of the store that had the greatest decrease in
average daily revenue from August to September?


with cte as(
select s.store,substr(t.saledate,1,7) as year_month, COUNT (DISTINCT t.saledate) AS num_dates,s.city,s.state,
SUM(t.amt) AS total_revenue,
total_revenue/num_dates AS daily_revenue,
lag(daily_revenue) over(partition by s.store order by year_month) as previous_month,
(daily_revenue-previous_month) as change


from trnsact t
inner join store_msa s
on s.store=t.store
where t.stype='p' and (year_month='2004-08'or year_month='2004-09') 
group by s.store,s.city,s.state,year_month
having num_dates>=20
)
select store,city,state,change
from cte
where changeis not null 
order by change asc

12, Exercise 12: Determine the month of maximum total revenue for each store. Count the
number of stores whose month of maximum total revenue was in each of the twelve
months. Then determine the month of maximum average daily revenue. Count the
number of stores whose month of maximum average daily revenue was in each of the
twelve months. How do they compare?

with cte as
(
SELECT 
  store, substr(cast(SALEDATE as char(8)),1,7) as year_month,
  COUNT (DISTINCT saledate) AS num_dates,
  SUM(amt) AS total_revenue,
  total_revenue/num_dates AS daily_revenue,
  row_number()over(partition by store order by daily_revenue desc) as row_avg,
  row_number()over(partition by store order by total_revenue desc) as row_total

  FROM trnsact
  WHERE stype='p' and year_month<>'2005-08'
  GROUP BY store, year_month
  Having num_dates>19
 
)

select year_month,
count(case when row_avg=12 then store end ) as num_max_avg ,
count(case when row_total=12 then store end) as num_max_total
from cte
group by year_month
order by num_max_total
